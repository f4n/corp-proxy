#!/bin/bash

SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CURRENT_PATH=`pwd`
CONFIG_PATH="$SCRIPT_PATH/config"
LAST_SELECTION_FILE=~/.proxy_selection

# find all available versions
cd $CONFIG_PATH
unset options i
while IFS= read -r -d $'\0' f; do
  options[i++]="${f:2}"
done < <(find . -maxdepth 1 -type f -name "*.setting" -print0 | sort -z )
cd $CURRENT_PATH

LAST_SELECTION=""
if [ -f $LAST_SELECTION_FILE ];
then
  VERSION_FILE=`cat $LAST_SELECTION_FILE`
  CONFIG_FILE=$VERSION_FILE
  if [ -f $VERSION_FILE ]
  then
    LAST_SELECTION="$(basename $VERSION_FILE)"
  fi
fi

if [ "$1" != "default" ]
then
  # create selection menu
  while [ true ]
  do
    echo "Select Config:"
    if [ -n "$LAST_SELECTION" ]
    then
      echo "(press return for $LAST_SELECTION)"
    fi
    echo ""
    for (( j=0; j<$i; j++ ))
    do
      if [ "${options[j]}" == "$LAST_SELECTION" ]
      then
        echo -n " --> "
      else
        echo -n "     "
      fi
      echo -n " $j) ${options[j]}"
      echo ""
    done

    # read user selection input
    read selection

    # if only return is pressed, check if we have a previous selection stored
    if [ -z $selection ]
    then
      if [ -f $LAST_SELECTION_FILE ];
      then
          CONFIG_FILE=`cat $LAST_SELECTION_FILE`
          break
      else
        echo "No last selection found, select a config"
        echo ""
        continue
      fi
    fi

    # test if selection is a number
    re='^[0-9]+$'
    if ! [[ $selection =~ $re ]] ; then
      echo "Not a number, try again"
      echo ""
      continue
    fi

    # test if selection exists
    if [ ${options[selection]+exists} ]
    then
      echo "$CONFIG_PATH/${options[selection]}" > $LAST_SELECTION_FILE
      #echo "$SCRIPT_PATH/versions/${options[selection]}"
      CONFIG_FILE="$CONFIG_PATH/${options[selection]}"
      break
    fi

    echo "Unknown selection, try again"
    echo ""
  done
fi

CURRENT_MD5="-"
if [ -f "$SCRIPT_PATH/config/squid.conf" ]
then
  CURRENT_MD5=`md5sum $SCRIPT_PATH/config/squid.conf | awk '{print $1}'`
fi
NEW_MD5=`md5sum $CONFIG_FILE | awk '{print $1}'`

DOCKER_ID=`docker ps | grep corp-proxy:latest | awk '{print $1}'`

# check if a proxy with selected setting already running
if [ "$CURRENT_MD5" == "$NEW_MD5" ]
then
  # check if a container is running with this config, then there is nothing to do
  if [ -n "$DOCKER_ID" ]
  then
    echo "Proxy already running"
    exit 0
  fi
fi

DOCKER_ID=`docker ps -a | grep corp-proxy:latest | awk '{print $1}'`

# check if old proxy is running and stop
if [ -n "$DOCKER_ID" ]
then
  echo "Stopping current proxy"
  $SCRIPT_PATH/proxy_stop.sh
fi

# link selected config file
rm -rf $SCRIPT_PATH/config/squid.conf
ln -s $CONFIG_FILE $SCRIPT_PATH/config/squid.conf


# start new proxy with selected config
echo "Start proxy $(basename $CONFIG_FILE)"
$SCRIPT_PATH/proxy_start.sh
